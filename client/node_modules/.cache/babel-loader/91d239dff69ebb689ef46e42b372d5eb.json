{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/App Foo Chat/foo-chat/client/src/pages/chatroom/chatroom.component.jsx\";\nimport React, { Component } from 'react';\nimport { getAllGroups } from '../../redux/action/group.action';\nimport { getAllUsers, setAllUsersStatus } from '../../redux/action/user.action';\nimport { connect } from 'react-redux';\nimport { getLocation } from '../../redux/action/user.action';\nimport PrivateMessages from '../../components/private-messages/private-messages.component';\nimport { getMessages } from '../../redux/action/message.action';\nimport ChatroomLeftSection from '../../components/chatroom-left-section/chatroom-left-section';\nimport { getOnlineUsers, setOnlineUsers, unRegisterSetOnlineUsers, changeOnlineUsers, receivePrivateMessage, unRegisterReceivePrivateMessage } from '../../services/socketIo';\n\nclass Chatroom extends Component {\n  constructor(props) {\n    super(props);\n\n    this.receiveMessageHandler = message => {\n      this.setState(prevState => ({ ...prevState,\n        showUserMessages: true,\n        friend: message.senderProfile\n      }));\n    };\n\n    this.setFriendHandler = user => {\n      this.setState((prevState, props) => ({ ...prevState,\n        showUserMessages: true,\n        friend: user\n      }));\n    };\n\n    this.setOnlineUsersHandler = ({\n      users,\n      usersStatus\n    }) => {\n      this.props.setOnlineUsers(users, usersStatus);\n    };\n\n    this.updateOnlineUsers = () => {\n      getOnlineUsers();\n    };\n\n    this.navLinkChangeHandler = value => {\n      this.setState({\n        currentLink: value\n      }, this.toggleLeftSection(false));\n    };\n\n    this.state = {\n      showUserMessages: false,\n      showModal: false,\n      messages: new Array(0),\n      location: null,\n      room: null,\n      friend: null\n    };\n  }\n\n  componentDidMount() {\n    setOnlineUsers(this.setOnlineUsersHandler);\n    changeOnlineUsers(this.updateOnlineUsers);\n    getOnlineUsers();\n    receivePrivateMessage(this.receiveMessageHandler);\n    this.props.getAllGroups();\n    this.props.getAllUsers();\n  }\n\n  componentWillUnmount() {\n    unRegisterReceivePrivateMessage();\n    unRegisterSetOnlineUsers();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"main\", {\n      className: \"chatroom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(ChatroomLeftSection, {\n      setFriendHandler: this.setFriendHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatroom__main-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 6\n      }\n    }, this.state.friend && this.state.showUserMessages && /*#__PURE__*/React.createElement(PrivateMessages, {\n      recipient: this.state.friend,\n      currentUser: this.props.currentUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  allUsers: state.user.users\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getAllGroups: () => dispatch(getAllGroups()),\n  getAllUsers: () => dispatch(getAllUsers()),\n  getLocation: coords => dispatch(getLocation(coords)),\n  setOnlineUsers: (users, usersStatus) => dispatch(setAllUsersStatus(users, usersStatus)),\n  getMessages: (userId, recipientId) => dispatch(getMessages(userId, recipientId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chatroom);","map":{"version":3,"sources":["/Users/macbook/Desktop/App Foo Chat/foo-chat/client/src/pages/chatroom/chatroom.component.jsx"],"names":["React","Component","getAllGroups","getAllUsers","setAllUsersStatus","connect","getLocation","PrivateMessages","getMessages","ChatroomLeftSection","getOnlineUsers","setOnlineUsers","unRegisterSetOnlineUsers","changeOnlineUsers","receivePrivateMessage","unRegisterReceivePrivateMessage","Chatroom","constructor","props","receiveMessageHandler","message","setState","prevState","showUserMessages","friend","senderProfile","setFriendHandler","user","setOnlineUsersHandler","users","usersStatus","updateOnlineUsers","navLinkChangeHandler","value","currentLink","toggleLeftSection","state","showModal","messages","Array","location","room","componentDidMount","componentWillUnmount","render","currentUser","mapStateToProps","errors","allUsers","mapDispatchToProps","dispatch","coords","userId","recipientId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { getAllGroups } from '../../redux/action/group.action'\r\nimport {getAllUsers, setAllUsersStatus } from '../../redux/action/user.action';\r\nimport {connect} from 'react-redux';\r\nimport { getLocation } from '../../redux/action/user.action';\r\nimport PrivateMessages from '../../components/private-messages/private-messages.component';\r\nimport { getMessages } from '../../redux/action/message.action';\r\nimport ChatroomLeftSection from '../../components/chatroom-left-section/chatroom-left-section';\r\nimport { getOnlineUsers, \r\n  setOnlineUsers,\r\n  unRegisterSetOnlineUsers,\r\n  changeOnlineUsers,\r\n  receivePrivateMessage,\r\n  unRegisterReceivePrivateMessage\r\n  } from '../../services/socketIo';\r\n\r\n\r\nclass Chatroom extends Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\tshowUserMessages: false,\r\n\t\tshowModal: false,\r\n\t\tmessages: new Array(0),\r\n\t\tlocation:null,\r\n\t\troom:null,\r\n\t\tfriend:null\r\n\t\t};\r\n    }\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tsetOnlineUsers(this.setOnlineUsersHandler)\r\n\t\tchangeOnlineUsers(this.updateOnlineUsers)\r\n\t\tgetOnlineUsers()\r\n\t\treceivePrivateMessage(this.receiveMessageHandler)\r\n\t\tthis.props.getAllGroups()\r\n\t\tthis.props.getAllUsers()\r\n\t}\r\n\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tunRegisterReceivePrivateMessage()\r\n\t\tunRegisterSetOnlineUsers()\r\n\t}\r\n\r\n\treceiveMessageHandler = (message)  => {    \r\n\t\tthis.setState(prevState => ({\r\n\t\t...prevState,\r\n\t\tshowUserMessages: true,\r\n\t\tfriend: message.senderProfile\r\n\t\t})\r\n\t)}\r\n\r\n\r\n\tsetFriendHandler  = (user) => {\r\n\t\tthis.setState((prevState, props)=>({\r\n\t\t...prevState,\r\n\t\tshowUserMessages: true,\r\n\t\tfriend:user\r\n\t\t}))\r\n\t}\r\n\r\n\tsetOnlineUsersHandler = ({users, usersStatus}) => {    \r\n\t\tthis.props.setOnlineUsers(users,usersStatus)\r\n\t}\r\n\r\n\tupdateOnlineUsers =()=> {\r\n\t\tgetOnlineUsers()\r\n\t}\r\n\t\r\n\r\n\tnavLinkChangeHandler = (value) => {    \r\n\t\tthis.setState({currentLink: value}, this.toggleLeftSection(false))\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<main className='chatroom'>\r\n\t\t\t\t\t<ChatroomLeftSection\r\n\t\t\t\t\tsetFriendHandler = {this.setFriendHandler} />\r\n\t\t\t\t\t<div className='chatroom__main-section'>\r\n\t\t\t\t\t{ this.state.friend && this.state.showUserMessages &&\r\n\t\t\t\t\t\t<PrivateMessages \r\n\t\t\t\t\t\trecipient= {this.state.friend}\r\n\t\t\t\t\t\tcurrentUser = {this.props.currentUser}/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</main>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n  errors : state.errors,\r\n  allUsers: state.user.users,\r\n\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getAllGroups : () => dispatch(getAllGroups()),\r\n  getAllUsers : () => dispatch(getAllUsers()),\r\n  getLocation: (coords) => dispatch(getLocation(coords)),\r\n  setOnlineUsers: (users, usersStatus) => dispatch(setAllUsersStatus(users, usersStatus)),\r\n  getMessages: (userId, recipientId) => dispatch(getMessages(userId, recipientId))\r\n\r\n\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps , mapDispatchToProps)(Chatroom);"]},"metadata":{},"sourceType":"module"}