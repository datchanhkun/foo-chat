{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/App Foo Chat/simply-chat/client/src/components/user-icon-status/user-icon-status.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport 'react-lazy-load-image-component/src/effects/blur.css';\n\nfunction UserIcon({\n  imageUri,\n  username,\n  onlineUsers\n}) {\n  const [isOnline, setIsOnline] = useState(\"\");\n  const [lastOnline, setLastOnline] = useState(\"\");\n  useEffect(() => {\n    if (onlineUsers) {\n      let userIndex = onlineUsers.findIndex(friend => friend.username === username);\n\n      if (userIndex !== -1) {\n        setIsOnline(onlineUsers[userIndex].isOnline);\n        setLastOnline(onlineUsers[userIndex].isOnline);\n      }\n    }\n\n    return () => {};\n  }, [onlineUsers]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-icon__photo-border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LazyLoadImage, {\n    alt: imageUri,\n    effect: \"blur\",\n    src: imageUri,\n    className: \"user-icon__photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: isOnline ? \"online\" : \"offline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n}\n\nconst mapStateToProps = state => ({\n  onlineUsers: state.user.usersStatus\n});\n\nexport default connect(mapStateToProps, null)(UserIcon);","map":{"version":3,"sources":["/Users/macbook/Desktop/App Foo Chat/simply-chat/client/src/components/user-icon-status/user-icon-status.jsx"],"names":["React","useEffect","useState","connect","LazyLoadImage","UserIcon","imageUri","username","onlineUsers","isOnline","setIsOnline","lastOnline","setLastOnline","userIndex","findIndex","friend","mapStateToProps","state","user","usersStatus"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,aAAT,QAA8B,iCAA9B;AACA,OAAO,sDAAP;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA,QAAD;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAAlB,EAAqD;AACnD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA2BR,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA+BV,QAAQ,CAAC,EAAD,CAA7C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,WAAJ,EAAgB;AACd,UAAIK,SAAS,GAAGL,WAAW,CAACM,SAAZ,CAAsBC,MAAM,IACxCA,MAAM,CAACR,QAAP,KAAoBA,QADR,CAAhB;;AAGF,UAAGM,SAAS,KAAK,CAAC,CAAlB,EAAoB;AAClBH,QAAAA,WAAW,CAACF,WAAW,CAACK,SAAD,CAAX,CAAuBJ,QAAxB,CAAX;AACAG,QAAAA,aAAa,CAACJ,WAAW,CAACK,SAAD,CAAX,CAAuBJ,QAAxB,CAAb;AACC;AACF;;AACD,WAAO,MAAM,CACZ,CADD;AAED,GAZQ,EAYN,CAACD,WAAD,CAZM,CAAT;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEF,QAApB;AAA8B,IAAA,MAAM,EAAC,MAArC;AAA4C,IAAA,GAAG,EAAEA,QAAjD;AAA2D,IAAA,SAAS,EAAC,kBAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAEG,QAAQ,GAAG,QAAH,GAAc,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD;;AAED,MAAMO,eAAe,GAAIC,KAAD,KAAW;AAChCT,EAAAA,WAAW,EAACS,KAAK,CAACC,IAAN,CAAWC;AADS,CAAX,CAAxB;;AAIA,eAAehB,OAAO,CAACa,eAAD,EAAkB,IAAlB,CAAP,CAA+BX,QAA/B,CAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\n\r\nfunction UserIcon({imageUri, username, onlineUsers}) {  \r\n  const [isOnline, setIsOnline]  = useState(\"\") \r\n  const [lastOnline, setLastOnline]  = useState(\"\")  \r\n\r\n  useEffect(() => {\r\n    if (onlineUsers){\r\n      let userIndex = onlineUsers.findIndex(friend =>(\r\n          friend.username === username\r\n    ))    \r\n    if(userIndex !== -1){\r\n      setIsOnline(onlineUsers[userIndex].isOnline)\r\n      setLastOnline(onlineUsers[userIndex].isOnline)\r\n      }\r\n    }\r\n    return () => {\r\n    };\r\n  }, [onlineUsers])\r\n\r\n\r\n  return (\r\n    <div className=\"user-icon\">\r\n      <div className=\"user-icon__photo-border\">\r\n        <LazyLoadImage alt={imageUri} effect=\"blur\" src={imageUri} className='user-icon__photo' />\r\n      </div>\r\n      <div className={isOnline ? \"online\" : \"offline\"}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n   onlineUsers:state.user.usersStatus\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(UserIcon)"]},"metadata":{},"sourceType":"module"}