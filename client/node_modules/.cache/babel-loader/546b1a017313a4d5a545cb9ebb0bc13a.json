{"ast":null,"code":"/**\r\n * verify the inputs fom the authentication form\r\n * @param {*} key \r\n * @param {*} value \r\n * @returns {Boolean}\r\n */\nfunction validator(key, value) {\n  switch (key) {\n    case 'username':\n      if (value.length > 0) {\n        return true;\n      }\n\n      return false;\n\n    case \"email\":\n      const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(String(value).toLowerCase());\n\n    case \"password\":\n      if (value.length > 7) {\n        return true;\n      }\n\n      return false;\n\n    case \"confirmPassword\":\n      if (!value.password) return;\n\n      if (value.password === value.confirm) {\n        return true;\n      }\n\n      return false;\n\n    default:\n      return;\n  }\n}\n\nexport default validator;","map":{"version":3,"sources":["/Users/macbook/Desktop/App Foo Chat/simply-chat/client/src/components/validator/validator.js"],"names":["validator","key","value","length","re","test","String","toLowerCase","password","confirm"],"mappings":"AAAA;;;;;;AAMA,SAASA,SAAT,CAAmBC,GAAnB,EAAwBC,KAAxB,EAA+B;AAC3B,UAAQD,GAAR;AACE,SAAK,UAAL;AACA,UAAIC,KAAK,CAACC,MAAN,GAAe,CAAnB,EAAsB;AACpB,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;;AACA,SAAK,OAAL;AACE,YAAMC,EAAE,GAAG,yJAAX;AACA,aAAOA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACJ,KAAD,CAAN,CAAcK,WAAd,EAAR,CAAP;;AACF,SAAK,UAAL;AACA,UAAIL,KAAK,CAACC,MAAN,GAAe,CAAnB,EAAsB;AAClB,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;;AACF,SAAK,iBAAL;AACE,UAAI,CAACD,KAAK,CAACM,QAAX,EAAsB;;AACtB,UAAIN,KAAK,CAACM,QAAN,KAAmBN,KAAK,CAACO,OAA7B,EAAsC;AACpC,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;;AACF;AACE;AArBJ;AAuBD;;AAGD,eAAeT,SAAf","sourcesContent":["/**\r\n * verify the inputs fom the authentication form\r\n * @param {*} key \r\n * @param {*} value \r\n * @returns {Boolean}\r\n */\r\nfunction validator(key, value) {\r\n    switch (key) {\r\n      case 'username':\r\n      if (value.length > 0) {\r\n        return true;\r\n      }\r\n      return false;\r\n      case \"email\":\r\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(value).toLowerCase());\r\n      case \"password\":\r\n      if (value.length > 7) {\r\n          return true;\r\n        }\r\n        return false;\r\n      case \"confirmPassword\":\r\n        if (!value.password)  return;\r\n        if (value.password === value.confirm) {\r\n          return true;\r\n        }\r\n        return false;\r\n      default:\r\n        return\r\n    }\r\n  }\r\n  \r\n  \r\n  export default validator;\r\n  "]},"metadata":{},"sourceType":"module"}