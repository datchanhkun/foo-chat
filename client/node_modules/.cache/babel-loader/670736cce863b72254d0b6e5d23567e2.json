{"ast":null,"code":"import { GET_EVENTS } from \"../actionType/event.actionType\";\nimport { removeError } from \"./errors.action\";\nimport { restApi } from \"../../services/api\";\nimport axios from \"axios\";\nimport { startFetching } from \"./fetch.actions\";\nimport { toast } from 'react-toastify';\nexport const setEvents = events => ({\n  type: GET_EVENTS,\n  payload: events\n});\nexport const getAllEvents = () => {\n  return dispatch => {\n    return restApi(\"get\", \"/api/events\").then(response => {\n      dispatch(setEvents(response));\n    }).catch(error => {});\n  };\n};\nexport const createEvent = event => {\n  let userId = sessionStorage.getItem(\"userId\");\n  return dispatch => {\n    return restApi(\"post\", `/user/${userId}/create-event/`, event).then(response => {\n      dispatch(removeError());\n      dispatch(joinEvent(response.eventId));\n      dispatch(setEvents(response.events));\n      toast.success(`New event created`);\n    }).catch(error => {\n      toast.error('Something went wrong. Try again later');\n    });\n  };\n};\nexport const getEventById = async eventId => {\n  let userId = sessionStorage.getItem(\"userId\");\n  return axios.get(`/user/${userId}/event/${eventId}`).then(response => {\n    return response.data.message;\n  }).catch(error => {});\n};\nexport const joinEvent = eventId => {\n  let userId = sessionStorage.getItem(\"userId\");\n  return dispatch => {\n    dispatch(startFetching());\n    return restApi(\"get\", `/user/${userId}/event/${eventId}/join`).then(response => {\n      dispatch(removeError());\n      dispatch(setEvents(response));\n      toast.success(`You have successfully joined event `);\n    }).catch(error => {\n      toast.error('Something went wrong. Try again later');\n    });\n  };\n};\nexport const leaveEvent = eventId => {\n  let userId = sessionStorage.getItem(\"userId\");\n  return dispatch => {\n    dispatch(startFetching());\n    return restApi(\"get\", `/user/${userId}/event/${eventId}/leave`).then(response => {\n      dispatch(removeError());\n      dispatch(setEvents(response));\n      toast.success(`You have successfully left event `);\n    }).catch(error => {\n      toast.error('Something went wrong. Try again later');\n    });\n  };\n};\nexport const deleteEvent = eventId => {\n  let userId = sessionStorage.getItem(\"userId\");\n  return dispatch => {\n    return restApi(\"get\", `/user/${userId}/event/${eventId}/delete`).then(response => {\n      dispatch(removeError());\n      dispatch(setEvents(response));\n      toast.success(`You have successfully deleted event `);\n    }).catch(error => {\n      toast.error('Something went wrong. Try again later');\n    });\n  };\n};","map":{"version":3,"sources":["/Users/macbook/Desktop/App Foo Chat/simply-chat/client/src/redux/action/event.action.js"],"names":["GET_EVENTS","removeError","restApi","axios","startFetching","toast","setEvents","events","type","payload","getAllEvents","dispatch","then","response","catch","error","createEvent","event","userId","sessionStorage","getItem","joinEvent","eventId","success","getEventById","get","data","message","leaveEvent","deleteEvent"],"mappings":"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","sourcesContent":["import { GET_EVENTS } from \"../actionType/event.actionType\";\r\nimport { removeError } from \"./errors.action\";\r\nimport { restApi } from \"../../services/api\";\r\nimport axios from \"axios\";\r\nimport { startFetching } from \"./fetch.actions\";\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nexport const setEvents = (events) =>({\r\n    type: GET_EVENTS,\r\n    payload: events\r\n\r\n}) \r\n\r\nexport const getAllEvents = () =>{\r\n    return dispatch =>{\r\n        return restApi (\"get\", \"/api/events\")\r\n            .then((response)=>{\r\n                dispatch(setEvents(response))\r\n            })\r\n            .catch((error)=>{\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const createEvent = (event) =>{\r\n    let userId = sessionStorage.getItem(\"userId\");    \r\n    return dispatch =>{\r\n        return restApi (\"post\", `/user/${userId}/create-event/`, event)\r\n            .then((response)=>{                   \r\n                dispatch(removeError())    \r\n                dispatch(joinEvent(response.eventId))        \r\n                dispatch(setEvents(response.events))\r\n                toast.success(`New event created`)\r\n            })\r\n            .catch((error)=>{\r\n                toast.error('Something went wrong. Try again later')\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const getEventById = async (eventId) =>{\r\n    let userId = sessionStorage.getItem(\"userId\");\r\n    return axios.get(`/user/${userId}/event/${eventId}`)\r\n        .then((response)=>{\r\n            return response.data.message\r\n        })\r\n        .catch((error)=>{\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport const joinEvent = (eventId) =>{    \r\n    let userId = sessionStorage.getItem(\"userId\");    \r\n    return dispatch =>{\r\n        dispatch(startFetching())        \r\n        return restApi (\"get\", `/user/${userId}/event/${eventId}/join`)\r\n            .then((response)=>{\r\n                dispatch(removeError())            \r\n                dispatch(setEvents(response))\r\n                toast.success(`You have successfully joined event `)\r\n\r\n            })\r\n            .catch((error)=>{\r\n                toast.error('Something went wrong. Try again later')\r\n\r\n            }\r\n        )\r\n    \r\n    }\r\n}\r\n\r\nexport const leaveEvent =  (eventId) =>{\r\n    let userId = sessionStorage.getItem(\"userId\");\r\n    return dispatch =>{\r\n        dispatch(startFetching())\r\n        return restApi (\"get\", `/user/${userId}/event/${eventId}/leave`)\r\n        .then((response)=>{\r\n            dispatch(removeError())            \r\n            dispatch(setEvents(response))\r\n            toast.success(`You have successfully left event `)\r\n\r\n        })\r\n        .catch((error)=>{\r\n            toast.error('Something went wrong. Try again later')\r\n\r\n        })\r\n    \r\n    }\r\n}\r\n\r\nexport const deleteEvent = (eventId) =>{\r\n    let userId = sessionStorage.getItem(\"userId\");\r\n    return dispatch =>{\r\n        return restApi (\"get\",`/user/${userId}/event/${eventId}/delete`)\r\n            .then((response)=>{\r\n                dispatch(removeError())            \r\n                dispatch(setEvents(response))\r\n                toast.success(`You have successfully deleted event `)\r\n\r\n            })\r\n            .catch((error)=>{\r\n                toast.error('Something went wrong. Try again later')\r\n\r\n                }\r\n            )\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}