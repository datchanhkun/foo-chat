{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/App Foo Chat/simply-chat/client/src/components/protected-route/protected-route.jsx\";\nimport React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst PrivateRoute = ({\n  component: Component,\n  currentUser,\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => sessionStorage.getItem(\"validator\") && currentUser ? /*#__PURE__*/React.createElement(Component, Object.assign({\n      currentUser: currentUser\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 8\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: \"/auth/login\",\n        state: {\n          from: props.location\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 8\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser\n});\n\nexport default connect(mapStateToProps, null)(PrivateRoute);","map":{"version":3,"sources":["/Users/macbook/Desktop/App Foo Chat/simply-chat/client/src/components/protected-route/protected-route.jsx"],"names":["React","Route","Redirect","connect","PrivateRoute","component","Component","currentUser","rest","props","sessionStorage","getItem","pathname","state","from","location","mapStateToProps","user"],"mappings":";AAAA,OAAQA,KAAR,MAAmB,OAAnB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAIA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,WAAxB;AAAqC,KAAGC;AAAxC,CAAD,KAAoD;AACrE,sBACA,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,IAAA,MAAM,EAAGC,KAAD,IACtBC,cAAc,CAACC,OAAf,CAAuB,WAAvB,KAAuCJ,WAAvC,gBACA,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAEA;AAAxB,OAAyCE,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADA,gBAEA,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AACTG,QAAAA,QAAQ,EAAC,aADA;AAETC,QAAAA,KAAK,EAAC;AAACC,UAAAA,IAAI,EAAEL,KAAK,CAACM;AAAb;AAFG,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADA;AAWH,CAZD;;AAaA,MAAMC,eAAe,GAAIH,KAAD,KAAW;AAC/BN,EAAAA,WAAW,EAACM,KAAK,CAACI,IAAN,CAAWV;AADQ,CAAX,CAAxB;;AAMA,eAAeJ,OAAO,CAACa,eAAD,EAAmB,IAAnB,CAAP,CAAgCZ,YAAhC,CAAf","sourcesContent":["import  React from 'react'\r\nimport {Route, Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst PrivateRoute = ({ component: Component, currentUser, ...rest }) => {    \r\n    return (\r\n    <Route {...rest} render={(props) => (\r\n       sessionStorage.getItem(\"validator\") && currentUser? \r\n       <Component currentUser={currentUser} {...props} /> : \r\n       <Redirect to={{\r\n            pathname:\"/auth/login\",\r\n            state:{from: props.location}\r\n            }}\r\n        />\r\n    )} />\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n    currentUser:state.user.currentUser\r\n })\r\n \r\n\r\n\r\nexport default connect(mapStateToProps , null)(PrivateRoute)"]},"metadata":{},"sourceType":"module"}