{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/App Foo Chat/simply-chat/client/src/components/chat-send-box/chat-send-box.component.jsx\";\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons';\nimport { connect } from 'react-redux';\nimport { sendMessageToGroup, sendPrivateMessage } from '../../services/socketIo';\nimport { sendMessage } from '../../redux/action/message.action';\n/**\r\n  * @desc handles the sending of message to groups or individuals based  props passed\r\n  * if the prop passed is groupId , the message is sent to a group \r\n  * if user info is passed, the message is sent privately\r\n  * @return null\r\n\r\n*/\n\nconst ChatSendBox = ({\n  groupId,\n  recipient,\n  currentUser,\n  sendMessage,\n  location\n}) => {\n  const [message, setMessage] = useState('');\n  console.log(recipient);\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n\n    if (groupId) {\n      sendMessageToGroup(message, groupId);\n    } else if (recipient) {\n      let body = {\n        message,\n        location\n      };\n      sendPrivateMessage(message, currentUser.username, recipient.username, location);\n      sendMessage(recipient._id, body);\n    } else {\n      alert('Click on a friend icon or join in a group to  Click vào');\n    }\n\n    setMessage('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmitHandler,\n    className: \"chat-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    value: \"something\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"chat-box__icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPaperPlane,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), \"  \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"chat_message\",\n    onChange: e => setMessage(e.target.value),\n    autoComplete: \"new-password\",\n    value: message,\n    placeholder: \"Send a message\",\n    className: \"chat-box__input chat_message\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  sendMessage: (message, receiverId) => dispatch(sendMessage(message, receiverId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatSendBox);","map":{"version":3,"sources":["/Users/macbook/Desktop/App Foo Chat/simply-chat/client/src/components/chat-send-box/chat-send-box.component.jsx"],"names":["React","useState","FontAwesomeIcon","faPaperPlane","connect","sendMessageToGroup","sendPrivateMessage","sendMessage","ChatSendBox","groupId","recipient","currentUser","location","message","setMessage","console","log","onSubmitHandler","e","preventDefault","body","username","_id","alert","target","value","mapStateToProps","state","user","mapDispatchToProps","dispatch","receiverId"],"mappings":";AAAA,OAAQA,KAAR,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,YAAT,QAA4B,mCAA5B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,QAAuD,yBAAvD;AACA,SAASC,WAAT,QAA4B,mCAA5B;AAGA;;;;;;;;AAQA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,SAAV;AAAqBC,EAAAA,WAArB;AAAkCJ,EAAAA,WAAlC;AAA+CK,EAAAA;AAA/C,CAAD,KAA+D;AAE/E,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;;AACA,QAAMO,eAAe,GAAIC,CAAD,IAAM;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGV,OAAH,EAAW;AACPJ,MAAAA,kBAAkB,CAACQ,OAAD,EAAUJ,OAAV,CAAlB;AACH,KAFD,MAGK,IAAIC,SAAJ,EAAc;AACf,UAAIU,IAAI,GAAG;AAACP,QAAAA,OAAD;AAAUD,QAAAA;AAAV,OAAX;AACAN,MAAAA,kBAAkB,CAACO,OAAD,EAAUF,WAAW,CAACU,QAAtB,EAAiCX,SAAS,CAACW,QAA3C,EAAqDT,QAArD,CAAlB;AACAL,MAAAA,WAAW,CAACG,SAAS,CAACY,GAAX,EAAgBF,IAAhB,CAAX;AAEH,KALI,MAMD;AACAG,MAAAA,KAAK,CAAC,yDAAD,CAAL;AACH;;AAEDT,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GAhBD;;AAkBA,sBACI;AAAM,IAAA,QAAQ,EAAEG,eAAhB;AAAiC,IAAA,SAAS,EAAC,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAS,IAAA,IAAI,EAAC,QAAd;AAAuB,IAAA,SAAS,EAAC,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEd,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,OAFJ,eAII;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,cAFT;AAGI,IAAA,QAAQ,EAAGe,CAAD,IAAKJ,UAAU,CAACI,CAAC,CAACM,MAAF,CAASC,KAAV,CAH7B;AAII,IAAA,YAAY,EAAC,cAJjB;AAKI,IAAA,KAAK,EAAEZ,OALX;AAMI,IAAA,WAAW,EAAC,gBANhB;AAOI,IAAA,SAAS,EAAC,8BAPd;AAO6C,IAAA,QAAQ,MAPrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAeH,CArCD;;AAuCA,MAAMa,eAAe,GAAIC,KAAD,KAAW;AAC/BhB,EAAAA,WAAW,EAACgB,KAAK,CAACC,IAAN,CAAWjB;AADQ,CAAX,CAAxB;;AAIC,MAAMkB,kBAAkB,GAAIC,QAAD,KAAc;AACtCvB,EAAAA,WAAW,EAAE,CAACM,OAAD,EAAUkB,UAAV,KAAyBD,QAAQ,CAACvB,WAAW,CAACM,OAAD,EAAUkB,UAAV,CAAZ;AADR,CAAd,CAA3B;;AAIA,eAAe3B,OAAO,CAACsB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CrB,WAA7C,CAAf","sourcesContent":["import  React, {useState} from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPaperPlane} from '@fortawesome/free-solid-svg-icons';\r\nimport {connect} from 'react-redux';\r\nimport { sendMessageToGroup, sendPrivateMessage } from '../../services/socketIo';\r\nimport { sendMessage } from '../../redux/action/message.action';\r\n\r\n\r\n/**\r\n  * @desc handles the sending of message to groups or individuals based  props passed\r\n  * if the prop passed is groupId , the message is sent to a group \r\n  * if user info is passed, the message is sent privately\r\n  * @return null\r\n\r\n*/\r\n\r\nconst ChatSendBox = ({groupId, recipient, currentUser, sendMessage, location}) =>  {    \r\n\r\n    const [message, setMessage] = useState('') \r\n    console.log(recipient)\r\n    const onSubmitHandler = (e) =>{\r\n        e.preventDefault()            \r\n        if(groupId){ \r\n            sendMessageToGroup(message, groupId)            \r\n        }\r\n        else if (recipient){\r\n            let body = {message, location}\r\n            sendPrivateMessage(message, currentUser.username,  recipient.username, location)\r\n            sendMessage(recipient._id, body)\r\n            \r\n        }\r\n        else{\r\n            alert('Click on a friend icon or join in a group to  Click vào')\r\n        }           \r\n       \r\n        setMessage('')\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={onSubmitHandler} className='chat-box'>\r\n            <input type='hidden' value='something'/>\r\n            <button  type='submit' className='chat-box__icon'>\r\n                <FontAwesomeIcon icon={faPaperPlane}/>  </button>\r\n            <input \r\n                type='text'\r\n                name='chat_message' \r\n                onChange={(e)=>setMessage(e.target.value)}\r\n                autoComplete='new-password'\r\n                value={message}\r\n                placeholder='Send a message' \r\n                className='chat-box__input chat_message' required/>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    currentUser:state.user.currentUser\r\n })\r\n\r\n const mapDispatchToProps = (dispatch) =>({\r\n    sendMessage: (message, receiverId) => dispatch(sendMessage(message, receiverId))\r\n })\r\n \r\n export default connect(mapStateToProps, mapDispatchToProps)(ChatSendBox)\r\n"]},"metadata":{},"sourceType":"module"}