{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/App Foo Chat/simply-chat/client/src/pages/auth-page.component.jsx\";\nimport React, { Component, PureComponent } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faKey, faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport { Login, SignUp, setAllUsers } from '../redux/action/user.action';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { removeError } from '../redux/action/errors.action';\nimport validator from '../components/validator/validator';\nimport { getOnlineUsers, connectOnAuth, startIOConnection, getAllUsers } from '../services/socketIo';\nimport { isMobile } from 'react-device-detect';\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/comment.svg\";\nimport AuthImage from '../assets/images/backgroundapple.jpg';\nimport Loader from '../components/loader.component';\n/**\n * Class representing authentication form for user\n */\n\nclass Auth extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.onChangeHandlerLogin = e => {\n      let {\n        name,\n        value\n      } = e.target;\n      this.setState(prevState => ({ ...prevState,\n        loginData: { ...prevState.loginData,\n          [name]: value\n        }\n      }));\n    };\n\n    this.setIsMobile = () => {\n      this.setState(prevState => ({ ...prevState,\n        isMobile: window.innerWidth <= 600\n      }));\n    };\n\n    this.onChangeHandlerRegister = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      const updatedControls = { ...this.state.registerData\n      };\n      const updatedFormElement = { ...updatedControls[name]\n      };\n      updatedFormElement.value = value;\n      updatedFormElement.touched = true;\n      updatedFormElement.validated = validator(name, name === 'confirmPassword' ? {\n        password: this.state.registerData.password.value,\n        confirm: value\n      } : value);\n      updatedControls[name] = updatedFormElement;\n      let formIsValid = true;\n\n      for (let inputIdentifier in updatedControls) {\n        formIsValid = updatedControls[inputIdentifier].validated;\n      }\n\n      this.setState({\n        registerData: updatedControls,\n        disableSubmitButton: !formIsValid\n      });\n    };\n\n    this.onSubmitHandler = e => {\n      this.setState(prevState => ({ ...prevState,\n        isLoading: true\n      }));\n      let userData = {\n        username: this.state.registerData.username.value,\n        email: this.state.registerData.email.value,\n        password: this.state.registerData.password.value,\n        confirmPassword: this.state.registerData.confirmPassword.value\n      };\n      e.preventDefault();\n      const header = {\n        headers: {\n          'content-type': 'multipart/form-data'\n        }\n      };\n\n      switch (this.state.auth) {\n        case 'register':\n          if (!this.state.imageFile) {\n            alert('Please Upload Image');\n            return;\n          }\n\n          this.props.SignUp(header, this.state.imageFile, userData).then(response => {\n            startIOConnection();\n            getOnlineUsers();\n            connectOnAuth(response);\n            getAllUsers();\n            this.setState(prevState => ({ ...prevState,\n              isLoading: false\n            }));\n            this.props.history.push('/');\n          }).catch(error => {\n            this.setState(prevState => ({ ...prevState,\n              isLoading: false\n            }));\n          });\n          break;\n\n        case 'login':\n          this.props.Login(this.state.auth, this.state.loginData).then(response => {\n            startIOConnection();\n            getOnlineUsers();\n            connectOnAuth(response).catch(error => {\n              this.setState(prevState => ({ ...prevState,\n                isLoading: false\n              }));\n            });\n            this.props.history.push('/');\n          }).catch(error => {\n            this.setState(prevState => ({ ...prevState,\n              isLoading: false\n            }));\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.onImageUploadHandler = () => {\n      let fileUpload = document.querySelector('.image-upload__input');\n      let filePath = document.querySelector('.image-upload__message');\n      fileUpload.click();\n\n      fileUpload.onchange = () => {\n        let fileName = fileUpload.value.split('\\\\')[fileUpload.value.split('\\\\').length - 1];\n        filePath.value = fileName;\n        console.log(fileUpload.files[0]);\n        this.setState((prevState, props) => ({ ...prevState,\n          imageFile: fileUpload.files[0],\n          imageUploaded: true\n        }));\n      };\n    };\n\n    this.changeAuthState = value => {\n      this.props.removeError();\n      this.setState({\n        auth: value\n      });\n    };\n\n    this.state = {\n      loggedIn: false,\n      isLoading: false,\n      disableSubmitButton: true,\n      auth: props.auth || 'register',\n      error: null,\n      isMobile: isMobile,\n      loginData: {\n        email: '',\n        password: ''\n      },\n      registerData: {\n        username: {\n          value: '',\n          focused: false,\n          validated: false\n        },\n        email: {\n          validated: false,\n          value: '',\n          focused: false\n        },\n        password: {\n          validated: false,\n          value: '',\n          focused: false\n        },\n        confirmPassword: {\n          validated: false,\n          value: '',\n          focused: false\n        }\n      },\n      imageFile: '',\n      imageUploaded: false\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.setIsMobile);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.auth !== prevProps.auth) {\n      this.setState(prevState => ({ ...prevState,\n        auth: this.props.auth\n      }));\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.setIsMobile);\n    this.props.removeError();\n  }\n  /**\n   * Changes state as user types based in the login component tag name and value \n   * @param {*} e \n   */\n\n\n  render() {\n    const {\n      errors\n    } = this.props;\n    const {\n      auth,\n      registerData,\n      loginData,\n      isMobile,\n      disableSubmitButton,\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auth-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 3\n      }\n    }, isLoading && /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auth-page__left-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auth-page__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      className: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"app-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 6\n      }\n    }, \"Foo Chat\")), /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"form-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"form-nav__list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"form-nav__item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: \"form-nav__link\",\n      activeClassName: \"active-auth\",\n      to: \"/auth/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 8\n      }\n    }, \"login \")), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"form-nav__item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: \"form-nav__link\",\n      activeClassName: \"active-auth\",\n      to: \"/auth/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 8\n      }\n    }, \"signUp \")))), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.onSubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 5\n      }\n    }, auth === 'register' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 8\n      }\n    }, errors.message === \"Email doesn't exist. Please Register\" ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }\n    }, \"Email doesn't exist. Please \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"switch-auth\",\n      style: {\n        color: 'blue',\n        cursor: 'pointer'\n      },\n      onClick: () => this.changeAuthState('register'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }\n    }, \" Register \")) : errors.message), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"form__group__icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 42\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      placeholder: isMobile ? \"Username\" : \"\",\n      onChange: this.onChangeHandlerRegister,\n      style: {\n        color: registerData.username.validated ? 'black' : 'red'\n      },\n      value: registerData.username.value,\n      className: \"form__input\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"username\",\n      className: \"form__label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 10\n      }\n    }, \"Username\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"form__group__icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEnvelope,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      placeholder: isMobile ? \"Email\" : \"\",\n      onChange: this.onChangeHandlerRegister,\n      value: registerData.email.value,\n      style: {\n        color: registerData.email.validated ? 'black' : 'red'\n      },\n      name: \"email\",\n      className: \"form__input\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      className: \"form__label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 10\n      }\n    }, \"Email\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"form__group__icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 42\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: isMobile ? \"Password(Must be at least 8 characters)\" : \"\",\n      name: \"password\",\n      onChange: this.onChangeHandlerRegister,\n      style: {\n        color: registerData.password.validated ? 'black' : 'red'\n      },\n      value: registerData.password.value,\n      className: \"form__input\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      className: \"form__label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }\n    }, \"(Must be at least 8 characters)\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"form__group__icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"confirmPassword\",\n      placeholder: isMobile ? \"Confirm password\" : \"\",\n      onChange: this.onChangeHandlerRegister,\n      style: {\n        color: registerData.confirmPassword.validated ? 'black' : 'red'\n      },\n      value: registerData.confirmPassword.value,\n      className: \"form__input\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"confirm-password\",\n      className: \"form__label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 10\n      }\n    }, \"Confirm Password\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__group-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"image-upload__input\",\n      name: \"image\",\n      onChange: this.url,\n      accept: \"image/*\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"image-upload__message\",\n      disabled: true,\n      placeholder: \"Upload Profile Image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"image-upload__button\",\n      onClick: this.onImageUploadHandler,\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }\n    }, \" Browse\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 8\n      }\n    }, errors.message === \"Email doesn't exist. Please Register\" ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }\n    }, \"Email doesn't exist. Please \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"switch-auth\",\n      style: {\n        color: 'blue',\n        cursor: 'pointer'\n      },\n      onClick: () => this.changeAuthState('register'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }\n    }, \" Register \")) : errors.message), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"form__group__icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEnvelope,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      placeholder: isMobile ? \"Email\" : \"\",\n      onChange: this.onChangeHandlerLogin,\n      value: loginData.email,\n      name: \"email\",\n      className: \"form__input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      className: \"form__label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 10\n      }\n    }, \"Email\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"form__group__icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 42\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: isMobile ? \"Password\" : \"\",\n      onChange: this.onChangeHandlerLogin,\n      value: loginData.password,\n      className: \"form__input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      className: \"form__label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 10\n      }\n    }, \"Password\")))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"form-submit-button\",\n      value: \"Submit\",\n      disabled: disableSubmitButton && auth === 'register',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 6\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auth-page__right-section\",\n      style: {\n        backgroundImage: `url(${AuthImage})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 4\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProp = state => ({\n  errors: state.errors\n});\n\nconst mapDispatchToProps = dispatch => ({\n  Login: (auth, loginData) => dispatch(Login(auth, loginData)),\n  removeError: () => dispatch(removeError()),\n  SignUp: (header, imageFile, userData) => dispatch(SignUp(header, imageFile, userData)),\n  setAllUsers: users => dispatch(setAllUsers(users))\n});\n\nexport default withRouter(connect(mapStateToProp, mapDispatchToProps)(Auth));","map":{"version":3,"sources":["/Users/macbook/Desktop/App Foo Chat/simply-chat/client/src/pages/auth-page.component.jsx"],"names":["React","Component","PureComponent","FontAwesomeIcon","faUser","faKey","faEnvelope","Login","SignUp","setAllUsers","withRouter","NavLink","connect","removeError","validator","getOnlineUsers","connectOnAuth","startIOConnection","getAllUsers","isMobile","AuthImage","Loader","Auth","constructor","props","onChangeHandlerLogin","e","name","value","target","setState","prevState","loginData","setIsMobile","window","innerWidth","onChangeHandlerRegister","updatedControls","state","registerData","updatedFormElement","touched","validated","password","confirm","formIsValid","inputIdentifier","disableSubmitButton","onSubmitHandler","isLoading","userData","username","email","confirmPassword","preventDefault","header","headers","auth","imageFile","alert","then","response","history","push","catch","error","onImageUploadHandler","fileUpload","document","querySelector","filePath","click","onchange","fileName","split","length","console","log","files","imageUploaded","changeAuthState","loggedIn","focused","componentDidMount","addEventListener","componentDidUpdate","prevProps","componentWillUnmount","removeEventListener","render","errors","message","color","cursor","url","backgroundImage","mapStateToProp","mapDispatchToProps","dispatch","users"],"mappings":"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","sourcesContent":["import React, { Component, PureComponent } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faKey, faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport {Login, SignUp, setAllUsers } from '../redux/action/user.action';\nimport {withRouter, NavLink} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport { removeError } from '../redux/action/errors.action';\nimport validator from '../components/validator/validator';\nimport { getOnlineUsers, connectOnAuth, startIOConnection, getAllUsers } from '../services/socketIo';\nimport {isMobile} from 'react-device-detect';\nimport { ReactComponent as Logo } from '../assets/images/comment.svg'\nimport AuthImage from '../assets/images/backgroundapple.jpg'\nimport Loader from '../components/loader.component';\n\n/**\n * Class representing authentication form for user\n */\nclass Auth extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n\t\tloggedIn:false,\n\t\tisLoading: false,\n\t\tdisableSubmitButton: true,\n        auth: props.auth || 'register',\n        error:null,\n        isMobile:isMobile,\n        loginData: {\n          email: '',\n          password: '',\n        },\n        registerData: {\n          username: {\n\t\t\tvalue: '',\n\t\t\tfocused: false,\n\t\t\tvalidated: false\n          },\n          email: {\n            validated: false,\n            value: '',\n            focused:false\n          },\n          password: {\n            validated: false,\n            value: '',\n            focused:false\n\n          },\n          confirmPassword: {\n            validated: false,\n            value: '',\n            focused:false\n            },\n          },\n\t\timageFile:'',\n\t\timageUploaded: false\n      }\n\n    }\n  componentDidMount(){\n    window.addEventListener('resize', this.setIsMobile)\n  }\n\n  componentDidUpdate(prevProps){\n    if(this.props.auth !== prevProps.auth){\n      this.setState((prevState) =>({\n        ...prevState,\n        auth: this.props.auth\n      })\n      )\n    }\n  }\n\n  componentWillUnmount(){\n    window.removeEventListener('resize', this.setIsMobile)\n    this.props.removeError()\n  }\n  \n  /**\n   * Changes state as user types based in the login component tag name and value \n   * @param {*} e \n   */\n  onChangeHandlerLogin =(e) =>{\n    let {name, value} = e.target;\n    this.setState((prevState)=>({\n      ...prevState,\n      loginData:{\n        ...prevState.loginData,\n        [name]:value\n      }\n    }))\n  }\n\n  setIsMobile = () =>{\n    this.setState((prevState) => ({\n      ...prevState,\n      isMobile: window.innerWidth <= 600\n    }))\n  }\n\n  /**\n   * Changes state as user types based in the register component tag name and value \n   * @param {*} e \n  */\n  onChangeHandlerRegister = (e) =>{\n\tconst {name, value} = e.target;\n\tconst updatedControls = {\n\t\t  ...this.state.registerData\n\t};\n\tconst updatedFormElement = {\n\t\t...updatedControls[name]\n\t};\n\tupdatedFormElement.value = value;\n\tupdatedFormElement.touched = true;\n\tupdatedFormElement.validated = validator(name,\n\t\tname === 'confirmPassword' ?  {\n\t\t\tpassword:this.state.registerData.password.value,\n\t\t\tconfirm: value\n\t\t\t} : value)\n\n\tupdatedControls[name] = updatedFormElement;\n\n\tlet formIsValid = true;\n\tfor (let inputIdentifier in updatedControls) {\n\t\tformIsValid = updatedControls[inputIdentifier].validated;\n\t}\n\n\tthis.setState({\n\t\tregisterData: updatedControls,\n\t\tdisableSubmitButton: !formIsValid\n\t});\n  }\n  \n  /**\n   * Submits either through the login link or the register link \n   * based on the current auth state value\n   * @param {*} e \n   */\n  onSubmitHandler = (e) =>{\n\t  this.setState(prevState =>({\n\t\t  ...prevState,\n\t\t  isLoading: true\n\t  }))\n    let userData = {\n        username:this.state.registerData.username.value,\n        email:this.state.registerData.email.value,\n        password: this.state.registerData.password.value,\n        confirmPassword: this.state.registerData.confirmPassword.value,\n      }\n    e.preventDefault()\n    const header = {\n      headers: {\n          'content-type': 'multipart/form-data'\n        }\n      };\n    switch (this.state.auth) {\n      case 'register':\n\t\tif(!this.state.imageFile){\n\t\t\talert('Please Upload Image')\n\t\t\treturn;\n\t\t}\n        this.props.SignUp(header, this.state.imageFile, userData)\n          .then((response) =>{\n            startIOConnection()\n            getOnlineUsers()\n\t\t\tconnectOnAuth(response)\n\t\t\tgetAllUsers()\n\t\t\t  this.setState(prevState => ({\n\t\t\t\t  ...prevState,\n\t\t\t\t  isLoading: false\n\t\t\t  }))\n            this.props.history.push('/')\n\t\t  })\n\t\t  .catch((error) =>{\n\t\t\t  this.setState(prevState => ({\n\t\t\t\t  ...prevState,\n\t\t\t\t  isLoading: false\n\t\t\t  }))\n\t\t  })\n        break;\n      case 'login':\n        this.props.Login(this.state.auth, this.state.loginData).then((response)=>{\n          startIOConnection()\n          getOnlineUsers()\n\t\t  connectOnAuth(response)\n\t\t\t  .catch((error) => {\n\t\t\t\t  this.setState(prevState => ({\n\t\t\t\t\t  ...prevState,\n\t\t\t\t\t  isLoading: false\n\t\t\t\t  }))\n\t\t\t  })\n          this.props.history.push('/')\n\t\t}).catch((error) => {\n\t\t\tthis.setState(prevState => ({\n\t\t\t\t...prevState,\n\t\t\t\tisLoading: false\n\t\t\t}))\n\t\t})\n          \n        break;\n      default:\n        break;\n    }\n  }\n\n   /**\n   * Handles the uploading and reading of the image file\n   * @param {*} \n   */\n  onImageUploadHandler = () =>{\n    let fileUpload = document.querySelector('.image-upload__input');\n    let filePath = document.querySelector('.image-upload__message');\n\tfileUpload.click()\n    fileUpload.onchange =  () => {\n      let fileName = fileUpload.value.split('\\\\')[fileUpload.value.split('\\\\').length - 1];\n\t  filePath.value = fileName\n\t  console.log(fileUpload.files[0])\n      this.setState((prevState, props) => ({\n        ...prevState,\n\t\t  imageFile:fileUpload.files[0],\n\t\t  imageUploaded: true\n        })\n      )  \n    };\n  }\n\n  \n  changeAuthState = (value)=>{\n    this.props.removeError()\n    this.setState({auth:value})\n  }\n\n  render() {\n    const { errors } = this.props;\n\tconst {auth, registerData, loginData, isMobile, disableSubmitButton, isLoading } = this.state;\n\n    return (\n\t\t<div className='auth-page'>\n\t\t\t{isLoading && <Loader/>}\n\t\t\t<div className=\"auth-page__left-section\">\n\t\t\t\t<div className=\"auth-page__header\">\n\t\t\t\t\t<Logo className='logo' />\n\t\t\t\t\t<span className='app-name'>Foo Chat</span>\n\t\t\t\t</div>\n\t\t\t\t<nav className='form-nav'>\n\t\t\t\t\t<ul className=\"form-nav__list\">\n\t\t\t\t\t\t<li className=\"form-nav__item\">\n\t\t\t\t\t\t\t<NavLink className=\"form-nav__link\" activeClassName='active-auth' to='/auth/login'>login </NavLink>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li className=\"form-nav__item\">\n\t\t\t\t\t\t\t<NavLink className=\"form-nav__link\" activeClassName='active-auth' to='/auth/register'>signUp </NavLink>\n\t\t\t\t\t\t</li>\n\n\t\t\t\t\t</ul>\n\t\t\t\t</nav>\n\t\t\t\t<form className='form' onSubmit={this.onSubmitHandler} >\n\t\t\t\t\t{(auth === 'register') ?\n\t\t\t\t\t\t<div className='form__inner'>\n\t\t\t\t\t\t\t<div className='alert-error'>{\n\t\t\t\t\t\t\t\terrors.message === \"Email doesn't exist. Please Register\" ?\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<span>Email doesn't exist. Please </span>\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\tclassName='switch-auth'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: 'blue', cursor: 'pointer' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.changeAuthState('register')}> Register </span>\n\t\t\t\t\t\t\t\t\t</div> : errors.message\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='form__component'>\n\t\t\t\t\t\t\t\t<i className='form__group__icon'><FontAwesomeIcon icon={faUser} /></i>\n\t\t\t\t\t\t\t\t<div className='form__group'>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tname='username'\n\t\t\t\t\t\t\t\t\t\tplaceholder={isMobile ? \"Username\" : \"\"}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChangeHandlerRegister}\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: registerData.username.validated ? 'black' : 'red' }}\n\t\t\t\t\t\t\t\t\t\tvalue={registerData.username.value}\n\t\t\t\t\t\t\t\t\t\tclassName='form__input' required />\n\t\t\t\t\t\t\t\t\t<label htmlFor='username' className='form__label'>\n\t\t\t\t\t\t\t\t\t\tUsername\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='form__component'>\n\t\t\t\t\t\t\t\t<i className='form__group__icon'>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faEnvelope} />\n\t\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t\t<div className='form__group'>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\t\t\tplaceholder={isMobile ? \"Email\" : \"\"}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChangeHandlerRegister}\n\t\t\t\t\t\t\t\t\t\tvalue={registerData.email.value}\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: registerData.email.validated ? 'black' : 'red' }}\n\t\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\t\tclassName='form__input' required />\n\t\t\t\t\t\t\t\t\t<label htmlFor='email' className='form__label'>Email</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='form__component'>\n\t\t\t\t\t\t\t\t<i className='form__group__icon'><FontAwesomeIcon icon={faKey} /></i>\n\t\t\t\t\t\t\t\t<div className='form__group'>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t\tplaceholder={isMobile ? \"Password(Must be at least 8 characters)\" : \"\"}\n\t\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChangeHandlerRegister}\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: registerData.password.validated ? 'black' : 'red' }}\n\t\t\t\t\t\t\t\t\t\tvalue={registerData.password.value}\n\t\t\t\t\t\t\t\t\t\tclassName='form__input' required />\n\t\t\t\t\t\t\t\t\t<label htmlFor='password' className='form__label'>\n\t\t\t\t\t\t\t\t\t\t<span>Password</span>\n\t\t\t\t\t\t\t\t\t\t<span>(Must be at least 8 characters)</span>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='form__component'>\n\t\t\t\t\t\t\t\t<i className='form__group__icon'>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faKey} />\n\t\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t\t<div className='form__group'>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t\tname='confirmPassword'\n\t\t\t\t\t\t\t\t\t\tplaceholder={isMobile ? \"Confirm password\" : \"\"}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChangeHandlerRegister}\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: registerData.confirmPassword.validated ? 'black' : 'red' }}\n\t\t\t\t\t\t\t\t\t\tvalue={registerData.confirmPassword.value}\n\t\t\t\t\t\t\t\t\t\tclassName='form__input' required />\n\t\t\t\t\t\t\t\t\t<label htmlFor='confirm-password' className='form__label'>Confirm Password</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='form__group-image'>\n\t\t\t\t\t\t\t\t<input type='file'\n\t\t\t\t\t\t\t\t\tclassName='image-upload__input'\n\t\t\t\t\t\t\t\t\tname='image'\n\t\t\t\t\t\t\t\t\tonChange={this.url} accept='image/*'  />\n\t\t\t\t\t\t\t\t<input type='text'\n\t\t\t\t\t\t\t\t\tclassName='image-upload__message'\n\t\t\t\t\t\t\t\t\tdisabled placeholder='Upload Profile Image' />\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='image-upload__button'\n\t\t\t\t\t\t\t\t\tonClick={this.onImageUploadHandler}\n\t\t\t\t\t\t\t\t\ttype='button'> Browse\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div> :\n\t\t\t\t\t\t<div className='form__inner'>\n\t\t\t\t\t\t\t<div className='alert-error'>{\n\t\t\t\t\t\t\t\terrors.message === \"Email doesn't exist. Please Register\" ?\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<span>Email doesn't exist. Please </span>\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\tclassName='switch-auth'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: 'blue', cursor: 'pointer' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.changeAuthState('register')}> Register </span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\terrors.message\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='form__component'>\n\t\t\t\t\t\t\t\t<i className='form__group__icon'>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faEnvelope} />\n\t\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t\t<div className='form__group'>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\t\t\tplaceholder={isMobile ? \"Email\" : \"\"}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChangeHandlerLogin}\n\t\t\t\t\t\t\t\t\t\tvalue={loginData.email}\n\t\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\t\tclassName='form__input'  />\n\t\t\t\t\t\t\t\t\t<label htmlFor='email' className='form__label'>Email</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='form__component'>\n\t\t\t\t\t\t\t\t<i className='form__group__icon'><FontAwesomeIcon icon={faKey} /></i>\n\t\t\t\t\t\t\t\t<div className='form__group'>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\t\tplaceholder={isMobile ? \"Password\" : \"\"}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChangeHandlerLogin}\n\t\t\t\t\t\t\t\t\t\tvalue={loginData.password}\n\t\t\t\t\t\t\t\t\t\tclassName='form__input' />\n\t\t\t\t\t\t\t\t\t<label htmlFor='password' className='form__label'>Password</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t<input type='submit' \n\t\t\t\t\t\tclassName='form-submit-button' \n\t\t\t\t\t\tvalue='Submit' \n\t\t\t\t\t\tdisabled={disableSubmitButton && auth === 'register' } />\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t<div className=\"auth-page__right-section\" style={{backgroundImage: `url(${AuthImage})`}}>\n\t\t</div>\t\n    </div>   \n    )\n  }\n}\n\nconst mapStateToProp = state =>({\n  errors : state.errors\n})\n\n\nconst mapDispatchToProps = (dispatch) => ({\n\tLogin: (auth, loginData) => dispatch(Login(auth, loginData)),\n\tremoveError: () =>dispatch(removeError()),\n\tSignUp: (header, imageFile, userData) => dispatch(SignUp(header, imageFile, userData)),\n\tsetAllUsers: (users) => dispatch(setAllUsers(users))\n\n})\n\nexport default withRouter(connect(mapStateToProp,mapDispatchToProps)(Auth))"]},"metadata":{},"sourceType":"module"}