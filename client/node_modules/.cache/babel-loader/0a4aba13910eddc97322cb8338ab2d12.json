{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/App Foo Chat/simply-chat/client/src/MainRoute.js\";\nimport React from 'react';\nimport { Switch, Route, withRouter, Redirect } from \"react-router-dom\";\nimport Auth from \"./pages/auth-page.component\";\nimport GroupPage from \"./pages/group/group.component\";\nimport Chatroom from \"./pages/chatroom/chatroom.component\";\nimport { setRestApiHeader, setAllUsersStatus, verifyUser, setCurrentUser, setAllUsers } from \"./redux/action/user.action\";\nimport PrivateRoute from \"./components/protected-route/protected-route\";\nimport { connect } from \"react-redux\";\nimport ProfilePage from \"./pages/profile-pages/profile-pages.component\";\nimport { connectOnAuth, setRooms, unRegisterSetOnlineUsers, setOnlineUsers, UnRegisterSetAllUsersHandler, setAllUsersHandler, UnRegisterSetUserInfo } from \"./services/socketIo\";\nimport NotFoundPage from './components/not-found/not-found';\nimport Navigation from './components/navigation/navigation';\nimport { removeError } from './redux/action/errors.action';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst io = require('socket.io-client');\n\nexport const socket = io.connect('');\n\nif (sessionStorage.getItem(\"validator\")) {\n  setRestApiHeader(sessionStorage.getItem(\"validator\"));\n}\n\nclass MainRouter extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.setAllUsers = users => {\n      this.props.setAllUsers(users);\n      toast.success('A new user has been added');\n    };\n  }\n\n  componentDidMount() {\n    this.props.removeError();\n    setOnlineUsers(response => {\n      setAllUsersStatus(response.users, response.usersStatus);\n    });\n    setAllUsersHandler(this.setAllUsers);\n    setRooms();\n\n    if (sessionStorage.getItem(\"validator\")) {\n      this.props.verifyUser().then().catch(res => this.props.history.push('/auth/login'));\n      connectOnAuth(this.props.currentUser.username);\n    }\n  }\n\n  componentWillUnmount() {\n    unRegisterSetOnlineUsers();\n    UnRegisterSetUserInfo();\n    UnRegisterSetAllUsersHandler();\n  }\n\n  render() {\n    const {\n      currentUser,\n      isAuthenticated,\n      history,\n      removeError\n    } = this.props;\n    history.listen(() => removeError());\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }\n    }, sessionStorage.getItem(\"validator\") && isAuthenticated && /*#__PURE__*/React.createElement(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 67\n      }\n    }), /*#__PURE__*/React.createElement(ToastContainer, {\n      position: \"top-center\",\n      autoClose: 3000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PrivateRoute, {\n      currentUser: currentUser,\n      exact: true,\n      path: \"/\",\n      component: Chatroom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/auth/login\",\n      render: props => sessionStorage.getItem(\"validator\") && isAuthenticated ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }) : /*#__PURE__*/React.createElement(Auth, Object.assign({\n        auth: \"login\"\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/auth/register\",\n      render: props => sessionStorage.getItem(\"validator\") && isAuthenticated ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }) : /*#__PURE__*/React.createElement(Auth, Object.assign({\n        auth: \"register\"\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRoute, {\n      exact: true,\n      currentUser: currentUser,\n      path: \"/group/:groupId\",\n      component: GroupPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRoute, {\n      exact: true,\n      currentUser: currentUser,\n      path: \"/user/:userId/profile\",\n      component: ProfilePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/404\",\n      component: NotFoundPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/404\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser,\n  isAuthenticated: state.user.isAuthenticated\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setAllUsersStatus: (users, usersStatus) => dispatch(setAllUsersStatus(users, usersStatus)),\n  verifyUser: () => dispatch(verifyUser()),\n  setCurrentUser: user => dispatch(setCurrentUser(user)),\n  removeError: () => dispatch(removeError()),\n  setAllUsers: users => dispatch(setAllUsers(users))\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MainRouter));","map":{"version":3,"sources":["/Users/macbook/Desktop/App Foo Chat/simply-chat/client/src/MainRoute.js"],"names":["React","Switch","Route","withRouter","Redirect","Auth","GroupPage","Chatroom","setRestApiHeader","setAllUsersStatus","verifyUser","setCurrentUser","setAllUsers","PrivateRoute","connect","ProfilePage","connectOnAuth","setRooms","unRegisterSetOnlineUsers","setOnlineUsers","UnRegisterSetAllUsersHandler","setAllUsersHandler","UnRegisterSetUserInfo","NotFoundPage","Navigation","removeError","ToastContainer","toast","io","require","socket","sessionStorage","getItem","MainRouter","Component","users","props","success","componentDidMount","response","usersStatus","then","catch","res","history","push","currentUser","username","componentWillUnmount","render","isAuthenticated","listen","mapStateToProps","state","user","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Switch, Route, withRouter, Redirect} from \"react-router-dom\"\r\nimport Auth from \"./pages/auth-page.component\";\r\nimport GroupPage from \"./pages/group/group.component\";\r\nimport Chatroom from \"./pages/chatroom/chatroom.component\";\r\nimport {setRestApiHeader, setAllUsersStatus, verifyUser, setCurrentUser, setAllUsers, } from \"./redux/action/user.action\";\r\nimport PrivateRoute from \"./components/protected-route/protected-route\";\r\nimport {connect} from \"react-redux\";\r\nimport ProfilePage from \"./pages/profile-pages/profile-pages.component\";\r\nimport {\r\n  connectOnAuth, \r\n  setRooms, \r\n  unRegisterSetOnlineUsers, \r\n  setOnlineUsers,  \r\n  UnRegisterSetAllUsersHandler,\r\n  setAllUsersHandler, \r\n  UnRegisterSetUserInfo} from \"./services/socketIo\";\r\nimport NotFoundPage from './components/not-found/not-found';\r\nimport Navigation from './components/navigation/navigation';\r\nimport { removeError } from './redux/action/errors.action';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst io = require('socket.io-client')\r\nexport const socket = io.connect('')\r\n\r\nif (sessionStorage.getItem(\"validator\")) {  \r\n    setRestApiHeader(sessionStorage.getItem(\"validator\"));\r\n  }\r\n  \r\n\r\nclass MainRouter extends React.Component {\r\n  componentDidMount(){\r\n    this.props.removeError()\r\n      setOnlineUsers((response=>{\r\n        setAllUsersStatus(response.users, response.usersStatus)\r\n      }\r\n    ))\r\n  setAllUsersHandler(this.setAllUsers)\r\n  setRooms()\r\n    if (sessionStorage.getItem(\"validator\")) {  \r\n      this.props.verifyUser()\r\n      .then()\r\n      .catch(res => this.props.history.push('/auth/login'))\r\n      connectOnAuth(this.props.currentUser.username)\r\n    } \r\n  }\r\n\r\n  componentWillUnmount(){\r\n    unRegisterSetOnlineUsers()\r\n    UnRegisterSetUserInfo()\r\n    UnRegisterSetAllUsersHandler()\r\n  }\r\n  \r\n  setAllUsers = (users) =>{\r\n    this.props.setAllUsers(users)\r\n    toast.success('A new user has been added')\r\n  }\r\n\r\n\r\n  \r\n  render(){\r\n    const {currentUser, isAuthenticated, history, removeError} = this.props\r\n    history.listen(() => removeError())\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      {\r\n        sessionStorage.getItem(\"validator\") && isAuthenticated && < Navigation />\r\n      }\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={3000}\r\n      />\r\n      <Switch>\r\n        <PrivateRoute currentUser={currentUser} exact path=\"/\" component={Chatroom} />\r\n        <Route  exact path=\"/auth/login\" render={props =>(\r\n          sessionStorage.getItem(\"validator\") && isAuthenticated ?\r\n            <Redirect to=\"/\"/> :\r\n            <Auth auth=\"login\" {...props}/>  \r\n          )\r\n        }/>\r\n        <Route  exact path=\"/auth/register\" render={props =>(\r\n          sessionStorage.getItem(\"validator\") && isAuthenticated ?\r\n            <Redirect to=\"/\"/> :\r\n            <Auth auth=\"register\" {...props}/>  \r\n          )\r\n      }/>\r\n        <PrivateRoute exact currentUser={currentUser} path=\"/group/:groupId\" component={GroupPage} />\r\n        <PrivateRoute exact currentUser={currentUser} path=\"/user/:userId/profile\" component={ProfilePage} />\r\n        <Route path=\"/404\" component={NotFoundPage} />\r\n        <Redirect to=\"/404\" />\r\n      </Switch>\r\n    </React.Fragment>\r\n      );\r\n  }\r\n}\r\n  \r\n  const mapStateToProps = (state) =>({\r\n    currentUser:state.user.currentUser,\r\n    isAuthenticated:state.user.isAuthenticated,\r\n })\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) =>({\r\n  setAllUsersStatus: (users, usersStatus) => dispatch(setAllUsersStatus(users, usersStatus)),\r\n  verifyUser: () => dispatch(verifyUser()),\r\n  setCurrentUser:(user) => dispatch(setCurrentUser(user)),\r\n  removeError: () => dispatch(removeError()),\r\n  setAllUsers: (users) => dispatch(setAllUsers(users))\r\n\r\n\r\n})\r\n  \r\n  export default withRouter(connect(mapStateToProps, mapDispatchToProps)(MainRouter));"]},"metadata":{},"sourceType":"module"}