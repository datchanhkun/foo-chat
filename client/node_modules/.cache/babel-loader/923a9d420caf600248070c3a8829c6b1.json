{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/App Foo Chat/simply-chat/client/src/components/events/events.components.jsx\";\nimport React, { Component } from 'react';\nimport Calendar from 'react-calendar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { createEvent, getAllEvents, joinEvent, leaveEvent, deleteEvent } from '../../redux/action/event.action';\nimport { connect } from 'react-redux';\nimport ModalWindow from '../modal-window/modal-window.component';\n/**\r\n  * @desc handles showing the adding of events by user, leaving, joining and deleting events \r\n  * @author Udendu Abasili\r\n\r\n*/\n\nclass Events extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getDate = e => {\n      let date = new Date(e);\n      this.setState({\n        date: date\n      });\n    };\n\n    this.toggleModal = showModal => {\n      this.setState({\n        showModal: showModal\n      }, () => this.props.getAllEvents());\n    };\n\n    this.onChangeHandle = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmitHandler = e => {\n      e.preventDefault();\n      const event = this.state;\n      this.props.addEvent(event);\n      this.setState({\n        showModal: false\n      });\n      this.setState(prevState => ({ ...prevState,\n        eventName: '',\n        time: '',\n        summary: '',\n        date: ''\n      }));\n    };\n\n    this.state = {\n      eventName: '',\n      time: '',\n      summary: '',\n      date: '',\n      createdBy: props.currentUser.username,\n      showModal: false\n    };\n  }\n\n  componentDidMount() {\n    //get all events when we load window\n    this.props.getAllEvents();\n  }\n\n  render() {\n    const {\n      allEvents,\n      currentUser,\n      deleteEvent,\n      joinEvent,\n      leaveEvent\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"event\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"add-button\",\n      onClick: () => this.toggleModal(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, \"Add\"), allEvents && /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"event__list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, allEvents.map(event => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, event.createdBy === currentUser.username && /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      onClick: () => deleteEvent(event._id),\n      className: \"close-button icon-custom\",\n      icon: faTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"card__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, event.eventName), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card__details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card__item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 8\n      }\n    }, \"Date : \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 8\n      }\n    }, event.date.split('T')[0])), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card__item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 8\n      }\n    }, \"Time : \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 8\n      }\n    }, event.time)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card__item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 8\n      }\n    }, \"Created By : \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 8\n      }\n    }, event.createdBy)), event.attenders.includes(currentUser.username) ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"form-submit-button\",\n      onClick: () => leaveEvent(event._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 8\n      }\n    }, \"R\\u1EDDi\") : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"form-submit-button\",\n      onClick: () => joinEvent(event._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, \"Join \")))))), this.state.showModal && /*#__PURE__*/React.createElement(ModalWindow, {\n      closeHandler: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Calendar, {\n      onChange: this.getDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"event__label\",\n      for: \"event-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, \"Event Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"event__input\",\n      onChange: this.onChangeHandle,\n      name: \"eventName\",\n      placeholder: \"Your name..\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"event__label\",\n      for: \"time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, \"Time\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"time\",\n      className: \"event__input\",\n      name: \"time\",\n      onChange: this.onChangeHandle,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"form-submit-button\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addEvent: event => dispatch(createEvent(event)),\n  joinEvent: event => dispatch(joinEvent(event)),\n  leaveEvent: event => dispatch(leaveEvent(event)),\n  deleteEvent: event => dispatch(deleteEvent(event)),\n  getAllEvents: () => dispatch(getAllEvents())\n});\n\nconst mapStateToProps = state => ({\n  allEvents: state.events.events,\n  currentUser: state.user.currentUser\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Events);","map":{"version":3,"sources":["/Users/macbook/Desktop/App Foo Chat/simply-chat/client/src/components/events/events.components.jsx"],"names":["React","Component","Calendar","FontAwesomeIcon","faTimes","createEvent","getAllEvents","joinEvent","leaveEvent","deleteEvent","connect","ModalWindow","Events","constructor","props","getDate","e","date","Date","setState","toggleModal","showModal","onChangeHandle","target","name","value","onSubmitHandler","preventDefault","event","state","addEvent","prevState","eventName","time","summary","createdBy","currentUser","username","componentDidMount","render","allEvents","map","_id","split","attenders","includes","mapDispatchToProps","dispatch","mapStateToProps","events","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport {createEvent, \r\n        getAllEvents, \r\n        joinEvent, \r\n        leaveEvent, \r\n        deleteEvent} from '../../redux/action/event.action';\r\nimport {connect} from 'react-redux';\r\nimport ModalWindow from '../modal-window/modal-window.component';\r\n\r\n/**\r\n  * @desc handles showing the adding of events by user, leaving, joining and deleting events \r\n  * @author Udendu Abasili\r\n\r\n*/\r\nclass Events extends Component {\r\n    constructor (props) {\r\n      super(props);\r\n      this.state = {\r\n        eventName:'',\r\n        time:'',\r\n        summary:'',\r\n        date:'',\r\n        createdBy:props.currentUser.username,\r\n        showModal: false\r\n      }\r\n    }\r\n    \r\n    componentDidMount(){\r\n      //get all events when we load window\r\n      this.props.getAllEvents()\r\n    }\r\n\r\n    getDate = (e) =>{\r\n        let date = new Date(e)     \r\n        this.setState({date: date})\r\n    }\r\n\r\n//switch profile window off and on\r\n    toggleModal = (showModal) =>{\r\n      this.setState({showModal: showModal},\r\n        ()=>this.props.getAllEvents())\r\n    }\r\n\r\n    onChangeHandle = (e) =>{\r\n        this.setState({[e.target.name]:e.target.value })\r\n    }\r\n\r\n    onSubmitHandler = (e) =>{\r\n      e.preventDefault()\r\n      const event = this.state\r\n      this.props.addEvent(event)\r\n      this.setState({showModal:false})\r\n      this.setState((prevState) => ({\r\n        ...prevState,\r\n        eventName:'',\r\n        time:'',\r\n        summary:'',\r\n        date:'',\r\n        }\r\n      ))\r\n    }\r\n    \r\n\r\n  render() {\r\n    const{\r\n      allEvents, \r\n      currentUser,\r\n      deleteEvent,\r\n      joinEvent,\r\n      leaveEvent } = this.props;\r\n\r\n    return (\r\n      <div className='event'>  \r\n        <button className='add-button' onClick={()=> this.toggleModal(true)} >\r\n          Add\r\n        </button>\r\n        {allEvents && \r\n          <ul className='event__list'>\r\n            {allEvents.map((event)=>(\r\n              <div className='card'>\r\n                  { event.createdBy === currentUser.username &&\r\n                    <FontAwesomeIcon \r\n                      onClick = {()=>deleteEvent(event._id)}\r\n                      className='close-button icon-custom'\r\n                      icon={faTimes}/>\r\n                    }\r\n\t\t\t\t\t\t<h1 className='card__header'>{event.eventName}</h1>\r\n\t\t\t\t\t<div className=\"card__details\">\r\n\t\t\t\t\t\t<div className=\"card__item\">\r\n\t\t\t\t\t\t\t<span className=\"label\">Date : </span>\r\n\t\t\t\t\t\t\t<span className=\"data\">{event.date.split('T')[0]}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"card__item\">\r\n\t\t\t\t\t\t\t<span className=\"label\">Time : </span>\r\n\t\t\t\t\t\t\t<span className=\"data\">{event.time }</span>\r\n\t\t\t\t\t\t</div><div className=\"card__item\">\r\n\t\t\t\t\t\t\t<span className=\"label\">Created By : </span>\r\n\t\t\t\t\t\t\t<span className=\"data\">{event.createdBy}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{event.attenders.includes(currentUser.username) ?\r\n\t\t\t\t\t\t\t<button className='form-submit-button' onClick={() => leaveEvent(event._id)}>\r\n\t\t\t\t\t\t\t\tRời \r\n                        </button>\r\n\t\t\t\t\t\t\t: <button className='form-submit-button' onClick={() => joinEvent(event._id)}>\r\n\t\t\t\t\t\t\t\t<span >Join </span>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n                </div>\r\n            ))\r\n          }\r\n        </ul>\r\n        }\r\n        {this.state.showModal && \r\n            <ModalWindow closeHandler={this.toggleModal} >\r\n              <Calendar onChange={this.getDate} \r\n              />\r\n              <form onSubmit={this.onSubmitHandler}>\r\n                <label className='event__label' for='event-name'>Event Name</label>\r\n                <input \r\n                  type='text' className='event__input' \r\n                  onChange={this.onChangeHandle} name='eventName' \r\n                  placeholder='Your name..' required/>              \r\n                <label className='event__label' for='time' >Time</label>\r\n                <input \r\n                  type='time' \r\n                  className='event__input' \r\n                  name='time' \r\n                  onChange={this.onChangeHandle} required/>\r\n                <input type='submit' className='form-submit-button' value='Submit'/>\r\n              </form>\r\n          </ModalWindow>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>({\r\n  addEvent: event => dispatch(createEvent(event)),\r\n  joinEvent: event => dispatch(joinEvent(event)),\r\n  leaveEvent: event => dispatch(leaveEvent(event)),\r\n  deleteEvent: event => dispatch(deleteEvent(event)),\r\n  getAllEvents: () => dispatch(getAllEvents()),\r\n\r\n})\r\n\r\nconst mapStateToProps = (state) =>({\r\n  allEvents: state.events.events,\r\n  currentUser:state.user.currentUser\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Events);\r\n"]},"metadata":{},"sourceType":"module"}