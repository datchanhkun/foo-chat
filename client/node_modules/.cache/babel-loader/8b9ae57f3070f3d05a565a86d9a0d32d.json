{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/App Foo Chat/foo-chat/client/src/components/chatroom-left-section/chatroom-left-section.jsx\";\nimport React from 'react';\nimport LeftNav from '../left-nav/left-nav.components';\nimport Contacts from '../contacts/contact.component';\nimport UserMessageHistory from '../user-message-history/user-message-history.component';\nimport Group from '../groups/group.component';\nimport Users from '../users/users.component';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusCircle, faMinusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { getMessages } from '../../redux/action/message.action';\n\nclass ChatroomLeftSection extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.setIsMobile = () => {\n      this.setState(prevState => ({ ...prevState,\n        isMobile: window.innerWidth <= 900\n      }));\n    };\n\n    this.toggleLeftSection = hide => {\n      let leftMargin = hide;\n      let icon = '';\n\n      if (hide) {\n        leftMargin = '-92vw';\n        icon = faPlusCircle;\n      } else {\n        leftMargin = '0';\n        icon = faMinusCircle;\n      }\n\n      this.setState(prevState => ({ ...prevState,\n        hideLeftSection: !prevState.hideLeftSection,\n        leftSectionStyling: { ...prevState.leftSectionStyling,\n          marginLeft: leftMargin,\n          iconType: icon\n        }\n      }));\n    };\n\n    this.showUserMessagesHandler = friend => {\n      this.props.getMessages(this.props.currentUser._id, friend._id).then(() => {\n        this.props.setFriendHandler(friend);\n        this.setState(prevState => ({ ...prevState,\n          showUserMessages: true,\n          friend: friend\n        }), this.toggleLeftSection(true));\n      });\n    };\n\n    this.toggleModal = value => {\n      this.setState(prevState => ({ ...prevState,\n        showModal: value\n      }));\n    };\n\n    this.navLinkChangeHandler = value => {\n      this.setState({\n        currentLink: value\n      }, this.toggleLeftSection(false));\n    };\n\n    this.navComponents = () => {\n      switch (this.state.currentLink) {\n        case 'messages':\n          return /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"chatroom__left-section__header\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"h1\", {\n            className: \"primary-header\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }\n          }, \"Li\\xEAn h\\u1EC7\"), this.state.isMobile && /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n            color: \"#0EBD60\",\n            className: \"switch\",\n            onClick: () => {\n              this.toggleLeftSection(!this.state.hideLeftSection);\n            },\n            icon: this.state.leftSectionStyling.iconType,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }\n          })), /*#__PURE__*/React.createElement(Contacts, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 13\n            }\n          }), /*#__PURE__*/React.createElement(UserMessageHistory, {\n            showMessages: this.showUserMessagesHandler,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 13\n            }\n          }));\n\n        case 'groups':\n          return /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"chatroom__left-section__header\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"h1\", {\n            className: \"primary-header\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }\n          }, \"Groups\"), this.state.isMobile && /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n            color: \"#0EBD60\",\n            className: \"switch\",\n            onClick: () => {\n              this.toggleLeftSection(!this.state.hideLeftSection);\n            },\n            icon: this.state.leftSectionStyling.iconType,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }\n          })), /*#__PURE__*/React.createElement(Group, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 13\n            }\n          }));\n\n        case 'users':\n          return /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"chatroom__left-section__header\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"h1\", {\n            className: \"primary-header\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }\n          }, \"Users\"), this.state.isMobile && /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n            color: \"#0EBD60\",\n            className: \"switch\",\n            onClick: () => {\n              this.toggleLeftSection(!this.state.hideLeftSection);\n            },\n            icon: this.state.leftSectionStyling.iconType,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }\n          })), /*#__PURE__*/React.createElement(Users, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 11\n            }\n          }));\n\n        default:\n          return;\n      }\n    };\n\n    this.state = {\n      currentLink: 'messages',\n      showUserMessages: false,\n      isMobile: window.innerWidth <= 900 ? true : false,\n      leftSectionStyling: {\n        marginLeft: '0',\n        iconType: faMinusCircle,\n        cursor: 'pointer'\n      },\n      hideLeftSection: false\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.setIsMobile);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.setIsMobile);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(LeftNav, {\n      navLinkChangeHandler: this.navLinkChangeHandler,\n      className: \"navigation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatroom__left-section\",\n      style: this.state.isMobile ? this.state.leftSectionStyling : {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, this.navComponents()));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser,\n  errors: state.errors,\n  allUsers: state.user.users\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getMessages: (userId, recipientId) => dispatch(getMessages(userId, recipientId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatroomLeftSection);","map":{"version":3,"sources":["/Users/macbook/Desktop/App Foo Chat/foo-chat/client/src/components/chatroom-left-section/chatroom-left-section.jsx"],"names":["React","LeftNav","Contacts","UserMessageHistory","Group","Users","connect","FontAwesomeIcon","faPlusCircle","faMinusCircle","getMessages","ChatroomLeftSection","PureComponent","constructor","props","setIsMobile","setState","prevState","isMobile","window","innerWidth","toggleLeftSection","hide","leftMargin","icon","hideLeftSection","leftSectionStyling","marginLeft","iconType","showUserMessagesHandler","friend","currentUser","_id","then","setFriendHandler","showUserMessages","toggleModal","value","showModal","navLinkChangeHandler","currentLink","navComponents","state","cursor","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","mapStateToProps","user","errors","allUsers","users","mapDispatchToProps","dispatch","userId","recipientId"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport LeftNav from '../left-nav/left-nav.components';\r\nimport Contacts from '../contacts/contact.component';\r\nimport UserMessageHistory from '../user-message-history/user-message-history.component';\r\nimport Group from '../groups/group.component';\r\nimport Users from '../users/users.component';\r\nimport {connect} from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusCircle, faMinusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { getMessages } from '../../redux/action/message.action';\r\n\r\n\r\nclass ChatroomLeftSection extends React.PureComponent {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      currentLink:'messages',\r\n      showUserMessages: false,\r\n      isMobile: window.innerWidth <= 900 ? true : false,\r\n      leftSectionStyling:{\r\n        marginLeft: '0',\r\n        iconType: faMinusCircle,\r\n        cursor: 'pointer'\r\n      },\r\n      hideLeftSection: false,\r\n        };\r\n    }\r\n    \r\n    componentDidMount(){\r\n      window.addEventListener('resize', this.setIsMobile)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n      window.removeEventListener('resize', this.setIsMobile)\r\n\r\n    }\r\n\r\n    setIsMobile = () =>{\r\n      this.setState((prevState) => ({\r\n        ...prevState,\r\n        isMobile: window.innerWidth <= 900\r\n      }))\r\n    }\r\n\r\n    toggleLeftSection = (hide) => {\r\n      let leftMargin = hide;\r\n      let icon = '';\r\n      if(hide){\r\n        leftMargin = '-92vw'\r\n        icon = faPlusCircle\r\n      }\r\n      else{\r\n        leftMargin = '0'\r\n        icon = faMinusCircle\r\n      }\r\n      this.setState((prevState)=>({\r\n        ...prevState,\r\n          hideLeftSection:!prevState.hideLeftSection,\r\n          leftSectionStyling: {\r\n            ...prevState.leftSectionStyling,\r\n            marginLeft: leftMargin,\r\n            iconType: icon\r\n              }\r\n          })\r\n        )\r\n    }\r\n \r\n    showUserMessagesHandler = (friend) => {         \r\n      this.props.getMessages(this.props.currentUser._id, friend._id)\r\n          .then(() => {\r\n            this.props.setFriendHandler(friend)\r\n              this.setState((prevState) => ({\r\n          ...prevState,\r\n          showUserMessages: true,\r\n          friend:friend,\r\n          }),this.toggleLeftSection(true))\r\n        })       \r\n    }\r\n\r\n    toggleModal = (value) =>{\r\n      this.setState((prevState) => ({\r\n        ...prevState,\r\n        showModal: value\r\n        })\r\n      )\r\n    }\r\n\r\n  navLinkChangeHandler = (value) =>{    \r\n    this.setState({currentLink: value}, this.toggleLeftSection(false))\r\n  }\r\n\r\n  navComponents = () =>{\r\n    switch (this.state.currentLink) {\r\n      case 'messages':\r\n        return (\r\n          <React.Fragment>\r\n              <div className='chatroom__left-section__header'>\r\n                <h1 className='primary-header'>Liên hệ</h1>\r\n                {this.state.isMobile && (\r\n                <FontAwesomeIcon color='#0EBD60' className='switch' onClick={() => {\r\n                      this.toggleLeftSection(!this.state.hideLeftSection)}\r\n                    }\r\n                icon={this.state.leftSectionStyling.iconType}/>)}\r\n              </div>\r\n            <Contacts />\r\n            <UserMessageHistory showMessages={this.showUserMessagesHandler} />\r\n          </React.Fragment>\r\n        )  \r\n      case 'groups':\r\n        return (\r\n          <React.Fragment>\r\n            <div className='chatroom__left-section__header'>\r\n                <h1 className='primary-header'>Groups</h1>\r\n                {this.state.isMobile && (\r\n                <FontAwesomeIcon color='#0EBD60' className='switch' onClick={() => {\r\n                      this.toggleLeftSection(!this.state.hideLeftSection)}\r\n                    }\r\n                icon={this.state.leftSectionStyling.iconType}/>)}\r\n              </div>\r\n            <Group/>\r\n          </React.Fragment>\r\n        ) \r\n      case 'users':\r\n        return (\r\n          <React.Fragment>\r\n          <div className='chatroom__left-section__header'>\r\n                <h1 className='primary-header'>Users</h1>\r\n                {this.state.isMobile && (\r\n                <FontAwesomeIcon color='#0EBD60' className='switch' onClick={() => {\r\n                      this.toggleLeftSection(!this.state.hideLeftSection)}\r\n                    }\r\n                icon={this.state.leftSectionStyling.iconType}/>)}\r\n            </div>\r\n          <Users/>\r\n      </React.Fragment>\r\n            )  \r\n      default:\r\n        return;\r\n    }\r\n  }  \r\n\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n          <LeftNav \r\n            navLinkChangeHandler={this.navLinkChangeHandler}  \r\n            className='navigation'/>\r\n            <div className='chatroom__left-section' style={this.state.isMobile ? this.state.leftSectionStyling : {}}>\r\n              {this.navComponents()}\r\n            </div>            \r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n  currentUser:state.user.currentUser,\r\n  errors : state.errors,\r\n  allUsers: state.user.users,\r\n\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getMessages: (userId, recipientId) => dispatch(getMessages(userId, recipientId))\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps , mapDispatchToProps)(ChatroomLeftSection);"]},"metadata":{},"sourceType":"module"}